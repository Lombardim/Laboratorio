package restaurante_la_prosperidad_camilo_miguel;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.*;
import javax.swing.Timer;

public class TiempoCoccion extends javax.swing.JFrame {
    File archivo;
    String horaT;
    int tmc, ma, sa = 1 + (int)(Math.random() * 59);
    ActionListener repeticion = new ActionListener(){
        
        @Override
        public void actionPerformed(ActionEvent AE) {
            if(s > 0){
                s--;
            }
            
            if(s == 0 && m > 0){
                s = 59;
                m = m - 1;
            }
            if(m == 0 && h > 0 && s == 0){
                m = 59;
                h = h - 1;
            }
            if(m == ma && s == sa){
                pedidoListo.setEnabled(true);
            }
            if (m == tmc) {
                cancelarP.setEnabled(false);
            }
            if (m == 0 && s == 0) {
                crono.stop();
            }
            actualizarCronometro();
        }
        
    };
    
    public void modificarArchivo(String horaF){
        try(FileWriter fw = new FileWriter(archivo, true)){
            Object hT = horaF;
            fw.write("Hora a la que se entregó el pedido: " + hT + ".");
        }catch(NullPointerException ex){
            
        }catch(IOException e){
            Logger.getLogger(Cocina.class.getName()).log(Level.SEVERE, null, e);
        }
    }
    int NumMesa;
    String NomMesero;
    int h = 0, m = 0, s = 0;
    String tiempo;
    Timer crono = new Timer(1000, repeticion);
    
    public void actualizarCronometro(){
        tiempo = (h < 10?"0":"") + h + ":" + (m < 10?"0":"") + m + ":" + (s < 10? "0":"") + s; //(h < 10? "0":"") Sirve para agregar un tipo de valor, es decir si es menor que 10 se vera asi = 08 y si es mayor a 10 = 11;
        tiempoC.setText(tiempo);
        if(m == 0 && s == 0){
            Calendar hora = new GregorianCalendar();
            int hh = hora.get(Calendar.HOUR_OF_DAY), mm = hora.get(Calendar.MINUTE), ss = hora.get(Calendar.SECOND) + 15;
            if(ss > 59){
                mm = mm + 1;
                ss = ss - 60;
            }
            horaT = (hh < 10?"0":"") + hh + ":" + (mm < 10?"0":"") + mm + ":" + (ss < 10?"0":"") + ss;
            modificarArchivo(horaT);
            JOptionPane.showMessageDialog(null, "El plato está listo para ser servido.", "PLATO LISTO", INFORMATION_MESSAGE);
            this.dispose(); 
        }
    }
    /**
     * Creates new form Tiempococcionn
     */
    public TiempoCoccion() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        servirPedido = new javax.swing.JFrame();
        jScrollPane1 = new javax.swing.JScrollPane();
        pedidoL = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        tiempoC = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cancelarP = new javax.swing.JButton();
        pedidoListo = new javax.swing.JButton();

        pedidoL.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Pedido", "Cant.", "Precio Un."
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(pedidoL);
        if (pedidoL.getColumnModel().getColumnCount() > 0) {
            pedidoL.getColumnModel().getColumn(0).setResizable(false);
            pedidoL.getColumnModel().getColumn(1).setResizable(false);
            pedidoL.getColumnModel().getColumn(1).setPreferredWidth(10);
            pedidoL.getColumnModel().getColumn(2).setResizable(false);
            pedidoL.getColumnModel().getColumn(2).setPreferredWidth(15);
        }

        jButton1.setText("ENTREGAR PEDIDO");

        javax.swing.GroupLayout servirPedidoLayout = new javax.swing.GroupLayout(servirPedido.getContentPane());
        servirPedido.getContentPane().setLayout(servirPedidoLayout);
        servirPedidoLayout.setHorizontalGroup(
            servirPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, servirPedidoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(servirPedidoLayout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        servirPedidoLayout.setVerticalGroup(
            servirPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, servirPedidoLayout.createSequentialGroup()
                .addContainerGap(94, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addGap(19, 19, 19))
        );

        setResizable(false);

        jPanel1.setBackground(java.awt.Color.lightGray);
        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        tiempoC.setFont(new java.awt.Font("Arial", 0, 48)); // NOI18N
        tiempoC.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tiempoC.setText("00:00:00");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tiempoC, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tiempoC, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("El plato estará listo aproximadamente dentro de:");

        cancelarP.setText("CANCELAR PEDIDO");
        cancelarP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarPActionPerformed(evt);
            }
        });

        pedidoListo.setText("PEDIDO LISTO");
        pedidoListo.setEnabled(false);
        pedidoListo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pedidoListoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 446, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cancelarP, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(pedidoListo, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addGap(9, 9, 9)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelarP)
                    .addComponent(pedidoListo))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelarPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarPActionPerformed
        int R = JOptionPane.showConfirmDialog(null, "¿Desea cambiar el pedido?\nSe le mostrará nuevamente el menú si elige [ SI ]", "CANCELAR PEDIDO", YES_NO_CANCEL_OPTION);
        if (R == 0) {
            crono.stop();
            Menu menu = new Menu();
            menu.idMesa = NumMesa;
            menu.nombreMesero = NomMesero;
            archivo.delete();
            menu.setVisible(true);
            this.dispose();
        }        
    }//GEN-LAST:event_cancelarPActionPerformed

    private void pedidoListoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pedidoListoActionPerformed
        m = 0;
        s = 1;
    }//GEN-LAST:event_pedidoListoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TiempoCoccion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TiempoCoccion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TiempoCoccion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TiempoCoccion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TiempoCoccion().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelarP;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable pedidoL;
    private javax.swing.JButton pedidoListo;
    private javax.swing.JFrame servirPedido;
    private javax.swing.JLabel tiempoC;
    // End of variables declaration//GEN-END:variables
}
